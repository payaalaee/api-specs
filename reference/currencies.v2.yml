openapi: 3.0.1
info:
  title: Currencies
  description: |-
    Manage alternate currency display options on the storefront.

    ## OAuth Scopes
    | UI Name                                      | Permission | Parameter                                     |
    |----------------------------------------------|------------|-----------------------------------------------|
    | Information & Settings                       | modify     | `store_v2_information`                        |
    | Information & Settings                       | read-only  | `store_v2_information_read_only`              |

    For more information on OAuth Scopes, see: [Authentication](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).

    ## Authentication

    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:

    ```http
    GET /stores/{store_hash}/v3/catalog/summary
    host: api.bigcommerce.com
    Accept: application/json
    X-Auth-Token: {access_token}
    ```

    |Header|Parameter|Description|
    |-|-|-|
    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

    For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).

    ## Available Endpoints
    | Resource / Endpoint                     | Description                                                             |
    |-----------------------------------------|-------------------------------------------------------------------------|
    | Currencies                              | Create and manage store currencies and their display                    |

    ## Definitions

    | Name | Description |
    | -- | -- |
    | Default Currency | Store's default currency is the one from which any auto-conversion of pricing (product, tax, shipping, promotions) will happen.|
    | Display Currency | Currency that is displayed on the storefront. This might or might not mean that shopper can actually transact in that currency. Display currency is also often called "presentment currency" in the payments industry. |
    | Transactional Currency | Transactional currency is what currency and amount BC passes to the payment provider and the currency/amount that the shopper will be charged to their bank account. If there's a discrepancy between the storefront display currency and the transactional currency, a shopper has to pay a conversion fee and the conversion rate that will be used will be outside of BC's purview. |
    | Settlement Currency | This is the currency in which the merchant gets paid out to their bank account. If there's a discrepancy between the currency that shopper transacts in and the currency in which merchant settles, merchant has to pay a conversion fee and the conversion rate used will be outside of BC's purview. Merchant is able to set their settlement currency through their payment provider. |
    |BigCommerce Conversion Rate | Any conversion rate set on BigCommerce used to convert product’s default currency pricing into a new non-default currency. Conversion rate could be static or dynamic. |
    | Static Conversion Rate | One of the two auto-converted pricing options. If a merchant manually enters a static conversion rate, then the conversion rate will remain the same until/unless merchant updates their currency settings to use a different conversion rate. The advantage of using this method is to avoid constantly fluctuating price in non-default currencies. |
    | Dynamic Conversion Rate | One of the two auto-converted pricing options. If a merchant selects a dynamic conversion rate, they've tied themselves to a currency conversion service, which will update the conversion rate at a certain frequency. This helps shopper-facing pricing remain most aligned to the store's default currency and keeps non-default currency conversion rate at market rate. Merchant can either use BigCommerce Currency Service provided in the Currency setup page, or they can use API to automatically update the exchange rate from their trusted source. |
    | Bank Conversion Rate | Conversion rate used by merchant’s or shopper’s payment or credit card provider when auto-converting from store’s transactional currency. This rate might not align to the BC conversion rate and BC has no visibility into it. |
    | Multi Currency Pricing | Rather than opting for auto-converting product pricing from default currency using BC conversion rate, merchant has a choice to set price per product per currency. This will be implemented through price lists. |

    ## FAQ

    **Do Multi-Currency settings work with the Checkout SDK?**  
    The Checkout SDK works with multi-currency. There is no additional setup needed for the SDK.
    After setting up currency in the Control Panel the SDK will work as normal.

    ## Resources

    - [How Currencies Work](/api-docs/catalog/currencies/how-currencies-work)
    - [Price List API](/api-reference/catalog/pricelists-api)
    - [Using Price Lists](https://support.bigcommerce.com/s/article/Price-Lists) (BigCommerce Knowledge Base)
    - [Managing Currencies](https://support.bigcommerce.com/s/article/Managing-Currencies-Beta) (BigCommerce Knowledge Base)
    - [Tax](https://support.bigcommerce.com/s/article/Manual-Tax-Setup#intro1) (BigCommerce Knowledge Base)
  version: ""
servers:
- url: https://api.bigcommerce.com
security:
- X-Auth-Token: []
tags:
- name: /currencies
  description: ""
- name: Currencies
paths:
  /stores/{store_hash}/v2/currencies:
    get:
      tags:
      - Currencies
      summary: Get All Currencies
      description: Returns a list of all store *Currency*.
      operationId: getAllCurrencies
      parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: true
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/json
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/currency_Full'
    post:
      tags:
      - Currencies
      summary: Create a Currency
      operationId: createACurrency
      description: |-
        Creates *Currency*.

        **Required Fields** 

        * name
        * currency_code
        * currency_exchange_rate
        * token_location
        * token
        * decimal_token
        * thousands_token
        * decimal_places

        **Read-Only Fields**

        * id
        * date_created
        * date_modified


        The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden. To change the store's default currency via the BigCommerce control panel, please see [Managing Currencies](https://support.bigcommerce.com/articles/Public/Managing-Currencies/?q=currency&l=en_US&fs=Search&pn=1#default).
      parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: true
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currency_Post'
        required: false
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency_Full'
    delete:
      tags:
      - Currencies
      summary: Delete All Currencies
      operationId: deleteAllCurrencies
      description: Deletes all non-default store currencies.
      parameters:
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/json
      - name: Accepts
        in: header
        required: true
        schema:
          type: string
          default: application/json
      responses:
        '204':
          description: ""
          content:
            application/json:
              schema:
                type: object
  /stores/{store_hash}/v2/currencies/{id}:
    get:
      tags:
      - Currencies
      summary: Get a Currency
      description: Returns a single *Currency*.
      operationId: getACurrency
      parameters:
      - name: id
        in: path
        description: Currency Id
        required: true
        schema:
          type: string
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/json
      - name: Accept
        in: header
        required: true
        schema:
          type: string
          default: application/json
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency_Full'
    put:
      tags:
      - Currencies
      summary: Update a Currency
      description: |-
        Updates a *Currency*.

        **Read-Only Fields**

        * id
        * date_created
        * date_modified
        * currency_code


        The `is_default` property can only be set to true. The value of `is_default` cannot be unset, only overridden. 
      operationId: updateACurrency
      parameters:
      - name: id
        in: path
        description: Currency Id
        required: true
        schema:
          type: string
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: true
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/currency_Put'
        required: false
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/currency_Full'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Currencies
      summary: Delete a Currency
      description: |-
        Deletes a *Currency*.

        If a currency's `is_default` property is set to true, this currency cannot be deleted. 
      operationId: deleteACurrency
      parameters:
      - name: id
        in: path
        description: Currency Id
        required: true
        schema:
          type: string
      - name: store_hash
        in: path
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: true
        schema:
          type: string
          default: application/json
      - name: Content-Type
        in: header
        required: true
        schema:
          type: string
          default: application/json
      responses:
        '204':
          description: ""
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    currency_Post:
      $ref: '#/components/schemas/currency_Base'
    currency_Base:
      title: currency_Base
      required:
      - currency_code
      - currency_exchange_rate
      - decimal_places
      - decimal_token
      - name
      - thousands_token
      - token
      - token_location
      type: object
      properties:
        is_default:
          type: boolean
          description: Specifies the store’s default currency display format. For
            write operations, only true value is accepted. When set to true, it cannot
            be unset, only overridden.
          example: false
        country_iso2:
          type: string
          description: 2-letter ISO Alpha-2 code for this currency’s country.
          example: EU
        currency_code:
          type: string
          description: 3-letter ISO 4217 code for this currency.
          example: EUR
        currency_exchange_rate:
          type: string
          description: Amount of this currency that is equivalent to one U.S. dollar.(Float,
            Float as String, Integer)
          example: "0.849"
        auto_update:
          type: boolean
          description: Specifies whether to use the Open Exchange Rates service to
            update the currency conversion. A value of false specifies a static conversion
            value. auto_update only applies to non-transactional currencies.
          example: true
        token_location:
          type: string
          description: Specifies whether this currency’s symbol appears to the “left”
            or “right” of the numeric amount.
          example: left
        token:
          type: string
          description: Symbol for this currency.
          example: €
        decimal_token:
          type: string
          description: Symbol used as the decimal separator in this currency.
          example: "."
        thousands_token:
          type: string
          description: Symbol used as the thousands separator in this currency.
          example: ','
        decimal_places:
          type: integer
          description: Number of decimal places to show for this currency.
          example: 2
        name:
          type: string
          description: Name of the currency.
          example: Euro
        enabled:
          type: boolean
          description: If the currency is active on the store.
          example: false
        is_transactional:
          type: boolean
          description: Indicates if the currency is set as transactional or not. False
            means display only currency
          example: false
      description: Currency Object
      example:
        id: 2
        is_default: false
        last_updated: Tue, 12 Jun 2018 14:41:56 +0000"
        country_iso2: EU
        currency_code: EUR
        currency_exchange_rate: '0.849'
        auto_update: true
        token_location: left
        token: €
        decimal_token: "."
        thousands_token: ','
        decimal_places: 2
        name: Euro
        enabled: false
      x-examples:
        Example:
          value:
            country_iso2: EU
            currency_code: EUR
            currency_exchange_rate: "0.849"
            auto_update: true
            token_location: left
            token: €
            decimal_token: "."
            thousands_token: ','
            decimal_places: 2
            name: Euro
            is_transactional: false
            id: 2
            is_default: false
            last_updated: 2018-06-12T14:41:56.000Z
            enabled: false
      x-internal: false
    currency_Put:
      $ref: '#/components/schemas/currency_Post'
    currency_Full:
      title: currency_Full
      allOf:
      - $ref: '#/components/schemas/currency_Base'
      - type: object
        properties:
          id:
            type: integer
            description: Id of the currency. READ-ONLY.
            example: 2
          last_updated:
            type: string
            description: Date the currency was last updated, created or modified.
            format: date-time
      x-internal: false
  responses:
    currencyCollection_Resp:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/currency_Full'
    currency_Resp:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/currency_Full'
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
  securitySchemes:
    X-Auth-Token:
      type: apiKey
      description: |-
        ### OAuth Scopes
        |  **UI Name** | **Permission** | **Parameter** |
        | --- | --- | --- |
        |  Information & Settings | modify | `store_v2_information` |
        |  Information & Settings | read-only | `store_v2_information_read_only` |

        ### Headers

        |Header|Parameter|Description|
        |-|-|-|
        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|

        ### Example

        ```http
        GET /stores/{store_hash}/v3/catalog/summary
        host: api.bigcommerce.com
        Content-Type: application/json
        X-Auth-Token: {access_token}
        ```

        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication). 
      name: X-Auth-Token
      in: header

